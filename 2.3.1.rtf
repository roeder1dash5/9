{\rtf1\ansi\ansicpg1252\cocoartf2821
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww19920\viewh15540\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 #import "ViewController.h"\
#import <ARKit/ARKit.h>\
#import <AVFoundation/AVFoundation.h>\
#import <Vision/Vision.h>\
#import "CircleView.h"\
\
@interface ViewController () <ARSCNViewDelegate, ARSessionDelegate>\
\
@property (nonatomic, strong) ARSCNView *sceneView;\
@property (nonatomic, strong) SCNNode *floorOverlayNode;\
\
@end\
\
@implementation ViewController\
\
- (void)viewDidLoad \{\
    [super viewDidLoad];\
    \
    [self setupARKit];    // Setup ARKit for floor detection\
    [self addCircleOverlay];  // Add frosted glass circle\
    [self addBottomBlur];  // Add bottom blur effect\
\}\
\
- (void)setupARKit \{\
    self.sceneView = [[ARSCNView alloc] initWithFrame:self.view.bounds];\
    self.sceneView.delegate = self;\
    self.sceneView.session.delegate = self;\
    self.sceneView.automaticallyUpdatesLighting = YES;\
    \
    [self.view addSubview:self.sceneView];\
\
    // Configure ARKit to detect horizontal planes (like floors)\
    ARWorldTrackingConfiguration *config = [[ARWorldTrackingConfiguration alloc] init];\
    config.planeDetection = ARPlaneDetectionHorizontal;\
    \
    [self.sceneView.session runWithConfiguration:config];\
\}\
\
#pragma mark - ARSCNViewDelegate\
\
- (void)renderer:(id<SCNSceneRenderer>)renderer didAddAnchor:(ARAnchor *)anchor forNode:(SCNNode *)node \{\
    if (![anchor isKindOfClass:[ARPlaneAnchor class]]) return;\
    \
    ARPlaneAnchor *planeAnchor = (ARPlaneAnchor *)anchor;\
    \
    // Check if this is a floor by looking at its y-position\
    if (planeAnchor.transform.columns[3].y < -0.3) \{ // Adjust threshold as needed\
        [self addFrozenFloorEffectToNode:node withPlaneAnchor:planeAnchor];\
    \}\
\}\
\
- (void)addFrozenFloorEffectToNode:(SCNNode *)node withPlaneAnchor:(ARPlaneAnchor *)planeAnchor \{\
    if (self.floorOverlayNode) \{\
        [self.floorOverlayNode removeFromParentNode]; // Remove previous floor overlay if any\
    \}\
\
    // Create a semi-transparent frozen effect\
    SCNPlane *floorPlane = [SCNPlane planeWithWidth:planeAnchor.extent.x height:planeAnchor.extent.z];\
    floorPlane.firstMaterial.diffuse.contents = [UIColor colorWithWhite:1.0 alpha:0.5]; // Semi-transparent ice effect\
    floorPlane.firstMaterial.transparency = 0.6;\
    \
    SCNNode *floorNode = [SCNNode nodeWithGeometry:floorPlane];\
    floorNode.position = SCNVector3Make(planeAnchor.center.x, planeAnchor.center.y, planeAnchor.center.z);\
    floorNode.eulerAngles = SCNVector3Make(-M_PI_2, 0, 0); // Rotate to lay flat on the floor\
\
    [node addChildNode:floorNode];\
    self.floorOverlayNode = floorNode; // Save reference\
\}\
\
@end\
}