{\rtf1\ansi\ansicpg1252\cocoartf2821
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww19920\viewh15540\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 #import "ViewController.h"\
#import <AVFoundation/AVFoundation.h>\
#import <Vision/Vision.h>\
#import "CircleView.h"\
\
@interface ViewController ()\
@property (nonatomic, strong) AVCaptureSession *session;\
@property (nonatomic, strong) AVCaptureVideoPreviewLayer *previewLayer;\
@property (nonatomic, strong) VNRequest *floorDetectionRequest;\
@property (nonatomic, strong) UIVisualEffectView *floorBlurView;\
@end\
\
@implementation ViewController\
\
- (void)viewDidLoad \{\
    [super viewDidLoad];\
    \
    [self setupCamera];    // Start the camera\
    [self addCircleOverlay];  // Add frosted glass circle\
    [self addBottomBlur];  // Add bottom blur effect\
    [self setupVision]; // Setup Vision for floor detection\
\}\
\
- (void)setupCamera \{\
    self.session = [[AVCaptureSession alloc] init];\
    self.session.sessionPreset = AVCaptureSessionPresetHigh;\
    \
    AVCaptureDevice *camera = [AVCaptureDevice defaultDeviceWithMediaType:AVMediaTypeVideo];\
    NSError *error = nil;\
    AVCaptureDeviceInput *input = [AVCaptureDeviceInput deviceInputWithDevice:camera error:&error];\
    \
    if (error) \{\
        NSLog(@"Error accessing camera: %@", error.localizedDescription);\
        return;\
    \}\
    \
    if ([self.session canAddInput:input]) \{\
        [self.session addInput:input];\
    \}\
    \
    AVCaptureVideoDataOutput *output = [[AVCaptureVideoDataOutput alloc] init];\
    [output setSampleBufferDelegate:self queue:dispatch_get_main_queue()];\
    [self.session addOutput:output];\
    \
    self.previewLayer = [AVCaptureVideoPreviewLayer layerWithSession:self.session];\
    self.previewLayer.videoGravity = AVLayerVideoGravityResizeAspectFill;\
    self.previewLayer.frame = self.view.bounds;\
    [self.view.layer addSublayer:self.previewLayer];\
    \
    dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^\{\
        [self.session startRunning];\
    \});\
\}\
\
- (void)setupVision \{\
    self.floorDetectionRequest = [[VNDetectRectanglesRequest alloc] initWithCompletionHandler:^(VNRequest *request, NSError *error) \{\
        if (error) return;\
        dispatch_async(dispatch_get_main_queue(), ^\{\
            [self processFloorDetectionResults:request.results];\
        \});\
    \}];\
\}\
\
- (void)processFloorDetectionResults:(NSArray<VNRectangleObservation *> *)results \{\
    if (results.count == 0) return;\
    VNRectangleObservation *floor = results.firstObject;\
    CGRect floorRect = VNImageRectForNormalizedRect(floor.boundingBox, self.view.bounds.size.width, self.view.bounds.size.height);\
    \
    if (!self.floorBlurView) \{\
        UIBlurEffect *blurEffect = [UIBlurEffect effectWithStyle:UIBlurEffectStyleLight];\
        self.floorBlurView = [[UIVisualEffectView alloc] initWithEffect:blurEffect];\
        [self.view addSubview:self.floorBlurView];\
    \}\
    self.floorBlurView.frame = floorRect;\
\}\
\
- (void)addCircleOverlay \{\
    CGFloat circleSize = 100.0;\
    CGRect circleFrame = CGRectMake(0, 0, circleSize, circleSize);\
    \
    CircleView *circleView = [[CircleView alloc] initWithFrame:circleFrame];\
    circleView.center = self.view.center;\
    \
    [self.view addSubview:circleView];\
\}\
\
- (void)addBottomBlur \{\
    CGFloat height = 200.0; // Height of the frosted glass effect at the bottom\
    CGRect blurFrame = CGRectMake(0, self.view.frame.size.height - height, self.view.frame.size.width, height);\
    \
    UIBlurEffect *blurEffect = [UIBlurEffect effectWithStyle:UIBlurEffectStyleLight];\
    UIVisualEffectView *blurView = [[UIVisualEffectView alloc] initWithEffect:blurEffect];\
    blurView.frame = blurFrame;\
    \
    CAGradientLayer *gradientMask = [CAGradientLayer layer];\
    gradientMask.frame = blurView.bounds;\
    gradientMask.colors = @[\
        (id)[UIColor clearColor].CGColor,\
        (id)[UIColor colorWithWhite:1.0 alpha:0.9].CGColor,\
        (id)[UIColor whiteColor].CGColor\
    ];\
    gradientMask.locations = @[@0.0, @0.5, @1.0];\
    gradientMask.startPoint = CGPointMake(1, 0);\
    gradientMask.endPoint = CGPointMake(1, 1.0);\
    \
    blurView.layer.mask = gradientMask;\
    [self.view addSubview:blurView];\
\}\
\
@end\
}